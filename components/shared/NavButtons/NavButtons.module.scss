@import "~styles/modules/variables.scss";
@import "~styles/modules/mixins.scss";
@import "~styles/modules/placeholders.scss";

$navButton-transition: all 200ms ease-in;

.navButtons {
  --nav-buttons-width: calc(100vw - (24px * 2));
  --nav-buttons-gap: 0.8rem;
  --nav-buttons-padding: 8px;
  --nav-button-width: clamp(
    ((320px - (16px * 2)) - (var(--nav-buttons-gap) * 4)) / 5,
    ((100vw - (24px * 2)) - (var(--nav-buttons-gap) * 4)) / 5,
    12rem
  );
  --nav-button-radius: 4px;

  position: fixed;
  z-index: 50;
  margin: 0;
  display: flex;
  list-style-type: none;
  padding-left: 0;
  gap: var(--nav-buttons-gap);
  transition: all 250ms ease;
  bottom: var(--nav-button-margin);
  left: 50%;
  transform: translate(-50%, 0);
  background-color: var(--bg-level-1);
  padding: var(--nav-buttons-padding);
  border-radius: var(--nav-button-radius);
  box-shadow: 37px 64px 45px rgba(17, 62, 99, 0.02),
    4px 7px 18px rgba(17, 62, 99, 0.08), 0px 0px 0px rgba(17, 62, 99, 0.08);

  &::before,
  &::after {
    position: absolute;
    background: linear-gradient(
      90deg,
      rgba(0, 0, 0, 0),
      rgba(255, 255, 255, 0.3) 25%,
      rgba(255, 255, 255, 0.15) 75%,
      rgba(0, 0, 0, 0)
    );
    opacity: 0.5;
    height: 1.5px;
    width: 100%;
  }

  &::before {
    top: 0;
  }

  &::after {
    bottom: 0;
  }

  @media (prefers-color-scheme: dark) {
    &:not([data-active-btn-index="2"]) {
      border: 1px solid var(--divider);

      &::before,
      &::after {
        content: "";
      }
    }
  }

  &[data-active-btn-index="-1"] {
    .navButtonIndicator {
      opacity: 0;
    }
  }

  &[data-active-btn-index="0"] {
    .navButtonIndicator {
      transform: translateX(0);
    }
  }

  &[data-active-btn-index="2"] {
    .navButtonIndicator {
      background: var(--fun-gradient);
    }

    @media (prefers-color-scheme: dark) {
      --bg-level-1: #{$bg-level-1-light};
      --text-contrast-10: #{$text-contrast-10-light};
    }
  }

  @for $i from 1 through 4 {
    &[data-active-btn-index="#{$i}"] {
      .navButtonIndicator {
        transform: translateX(
          calc(
            (#{var(--nav-button-width)} * #{$i}) +
              (#{var(--nav-buttons-gap)} * #{$i})
          )
        );
      }
    }
  }
}

.navButtonsHidden {
  opacity: 0;
  transform: translate(-50%, 100%);
  transition-duration: 600ms;

  &:focus-within {
    opacity: 1;
    transform: translate(-50%, 0);
  }
}

.navButtonIndicator {
  content: "";
  display: block;
  position: absolute;
  width: var(--nav-button-width);
  height: var(--nav-button-height);
  border-radius: var(--nav-button-radius);
  background-color: var(--text-contrast-10);
  z-index: 0;
  transition: $navButton-transition;
}

.navButton {
  position: relative;
  z-index: 1;
  flex: 1;

  &:nth-of-type(3) {
    .navButtonLink {
      &[aria-current="page"] {
        cursor: initial !important;
      }

      &[aria-current="false"] {
        @include onHoverAndFocus {
          color: var(--link);
        }
      }
    }
  }

  &:not(:nth-of-type(3)) {
    .navButtonLink {
      &[aria-current="page"] {
        &:focus-visible {
          box-shadow: 0 0 0 1px var(--bg-level-1),
            0 0 0 3px var(--text-contrast-10);
        }
      }

      &[aria-current="false"] {
        @include onHoverAndFocus {
          color: var(--link);
        }
      }
    }
  }
}

.navButtonLabel {
  color: inherit;
  transition: inherit;
  font-family: var(--type-paragraph);
  font-weight: var(--font-weight-medium);
  margin: 0;

  @include breakpoint(0, 499.99) {
    font-size: 2.6vw;
  }

  @include breakpoint(500) {
    font-size: 1.2rem;
  }
}

.navButtonLink {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  gap: 0.4rem;
  width: var(--nav-button-width);
  min-height: var(--nav-button-height);
  color: var(--text-contrast-10);
  border-radius: var(--nav-button-radius);
  transition: all 100ms ease-in;
  padding: var(--nav-buttons-padding);

  svg {
    transition: inherit;
    width: 2rem;
    height: auto;

    path {
      fill: unset;
    }
  }

  p {
    transition: inherit;
  }

  &[aria-current="page"] {
    color: var(--bg-level-1);
    cursor: initial;
  }

  &:focus-visible {
    box-shadow: 0 0 0 1px var(--bg-level-1), 0 0 0 3px var(--link);
  }
}
